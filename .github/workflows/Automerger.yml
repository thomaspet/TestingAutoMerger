name: Automerger
on:
  push:
    branches:
      - pilot
      - master
      - RC
      - RC-[0-9]+
      - rc-[0-9]+

jobs:
    check-conflicts:
        runs-on: ubuntu-latest
        outputs: 
            conflicts: ${{ steps.check.outputs.conflicts }}
            HEAD: ${{ steps.head.outputs.head }}
            BASE: ${{ steps.base.outputs.base }}
        steps:
          - uses: actions/checkout@master
            with:
              fetch-depth: 0

          - name: Get name of head
            id: head
            run: |
              echo ::set-output name=head::$(echo ${{ github.ref }} | sed "s/refs\/heads\///")

          - name: Set base from head
            id: base
            run: |
              if [ ${{ steps.head.outputs.head }} == "pilot" ] || [ ${{ steps.head.outputs.head }} == "master" ]; then
                echo ::set-output name=base::RC
              else
                echo ::set-output name=base::develop
              fi

          - name: Check for conflicts
            run: |
             git config user.email ${{ github.actor }}@users.noreply.github.com
             git config user.name ${{ github.actor }}
             git fetch origin ${{ steps.base.outputs.base }}
             git checkout ${{ steps.base.outputs.base }}
             git merge ${{ steps.head.outputs.head }} & exit 0

          - name: Save amount of conflicts
            id: check
            run: |
             echo "::set-output name=conflicts::$(git ls-files -u | wc -l)"
    merge:
        runs-on: ubuntu-latest
        env:
          PATOWNER: frodet
        needs: check-conflicts
        if: needs.check-conflicts.outputs.conflicts == 0
        steps:
          - uses: actions/checkout@master
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Merge and push
            env: 
              remote: https://${{env.PATOWNER}}:${{secrets.GITHUBACTIONREPOKEY}}@github.com/${{github.repository}}.git
            run: |
              git config remote.origin.url ${{ env.remote }}
              git config user.email ${{ github.actor }}@users.noreply.github.com
              git config user.name ${{ github.actor }}
              git fetch origin ${{ needs.check-conflicts.outputs.BASE }}
              git fetch origin ${{ needs.check-conflicts.outputs.HEAD }}
              git checkout ${{ needs.check-conflicts.outputs.BASE }}
              git merge origin/${{ needs.check-conflicts.outputs.HEAD }} --no-ff
              git push origin ${{ needs.check-conflicts.outputs.BASE }}

    pull-request:
      runs-on: ubuntu-latest
      needs: check-conflicts
      if: needs.check-conflicts.outputs.conflicts > 0
      steps:
        - uses: actions/checkout@master
          with:
              fetch-depth: 0

        - name: Set current date as env variable
          id: date
          run: echo "::set-output name=date::$(date +'%Y%m%dT%H%M%S')"

        - name: Create PR branch name
          id: prbranch
          run: echo "::set-output name=branch_name::Automerge_${{ needs.check-conflicts.outputs.HEAD }}_${{ github.actor }}_${{ steps.date.outputs.date }}"
        - name: Open pull request
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            git config user.email ${{ github.actor }}@users.noreply.github.com
            git config user.name ${{ github.actor }}
            git fetch origin ${{ needs.check-conflicts.outputs.HEAD }}
            git checkout ${{ needs.check-conflicts.outputs.HEAD }}
            git checkout -b ${{ steps.prbranch.outputs.branch_name }}
            git push origin ${{ steps.prbranch.outputs.branch_name }}
            gh pr create --head ${{ steps.prbranch.outputs.branch_name }} --base ${{ needs.check-conflicts.outputs.BASE }} \
              --title "[AutoDownMerge] Merge conflict between ${{ needs.check-conflicts.outputs.HEAD }} and ${{ needs.check-conflicts.outputs.BASE }}" \
              --body "Conflict in automatic downmerge. Please manually fix conflict." \
              -a ${{ github.actor }}
